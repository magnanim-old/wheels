name: Wheels

on: [push, pull_request]

jobs:
  wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [38, 39]
        bitness: [32, 64]
        include:
          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            bitness: 32
            platform_id: manylinux_i686
          - os: macos-latest
            bitness: 64
            platform_id: macosx_x86_64
        exclude:
          - os: macos-latest
            bitness: 32

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
      
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.16.x'

      - name: Install requirements
        run: python -m pip install wheel cibuildwheel==2.0.0a2 twine
              
      - name: Build wheels
        shell: bash
        env:
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.13
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CMAKE_ARCH: ${{ matrix.cibw-arch == 'win32' && '-A Win32' || '' }}
          #CIBW_BEFORE_ALL_LINUX: pip install cmake && ln -s $(which cmake) /usr/local/bin/cmake
          CIBW_BUILD_VERBOSITY: 3
        run: |
          python -m cibuildwheel --output-dir wheelhouse
          
      - name: Check built wheels
        if: matrix.cibw-arch == 'manylinux_x86_64'
        run: |
          ls wheelhouse/*
          twine check wheelhouse/*
