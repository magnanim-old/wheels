name: Build

on: [push, pull_request]

jobs:
  wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python: [38, 39]
        bitness: [32, 64]
        manylinux_image: [manylinux2010]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows
          - os: windows-latest
            bitness: 64
            platform_id: win_amd64
          - os: windows-latest
            bitness: 32
            platform_id: win32
          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            bitness: 32
            platform_id: manylinux_i686
          - os: macos-latest
            bitness: 64
            platform_id: macosx_x86_64
        exclude:
          - os: macos-latest
            bitness: 32

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
      
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.16.x'

      - name: Install requirements
        run: python -m pip install cibuildwheel twine
          
      - name: Build wheels
        env:
          #CONFTEST_PATH: ${{ github.workspace }}/conftest.py
          #CONFTEST_NAME: conftest.py
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.13
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          #CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: bash build_tools/github/repair_windows_wheels.sh {wheel} {dest_dir} ${{ matrix.bitness }}
          #CIBW_BEFORE_TEST_WINDOWS: bash build_tools/github/build_minimal_windows_image.sh ${{ matrix.python }} ${{ matrix.bitness }}
          #CIBW_TEST_REQUIRES: pytest pandas threadpoolctl
          #CIBW_TEST_COMMAND: bash {project}/build_tools/github/test_wheels.sh
          #CIBW_TEST_COMMAND_WINDOWS: bash {project}/build_tools/github/test_windows_wheels.sh ${{ matrix.python }} ${{ matrix.bitness }}
          CIBW_BUILD_VERBOSITY: 3
        run: python -m cibuildwheel --output-dir wheelhouse
          
      #- name: Check built wheels
      #  if: matrix.cibw-arch == 'manylinux_x86_64'
      #  run: |
      #    twine check wheelhouse/*

      - name: Collect output
        run:  |
          tar zcf wheels.tar.gz ./wheelhouse/
          ls -l
          ls ./wheelhouse/
          
