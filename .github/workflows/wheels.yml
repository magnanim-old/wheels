name: Build

on: [push, pull_request]

jobs:
  wheels:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_i686
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64
          - runs-on: macos-latest
            cibw-arch: macosx_arm64
          - runs-on: macos-latest
            cibw-arch: macosx_universal2
          - runs-on: windows-latest
            cibw-arch: win_amd64
          - runs-on: windows-latest
            cibw-arch: win32
            python-arch: x86

    name: Wheels â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{ matrix.python-arch }}
      
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.9

      - name: Install requirements
        run: python -m pip install cibuildwheel twine
          
      - name: Run cibuildwheel
        shell: bash
        run: |
          echo "CIBW_BUILD=cp38-*" >> $GITHUB_ENV
          python -m cibuildwheel --output-dir wheelhouse
          
      - name: Check built wheels
        if: matrix.cibw-arch == 'manylinux_x86_64'
        run: |
          twine check wheelhouse/*

      - name: Collect output
        run:  |
          tar zcf wheels.tar.gz ./wheelhouse/
          ls -l
          ls ./wheelhouse/
          
